.\" DNS Reply Tool (drool)
.\"
.\" Copyright (c) 2017-2018, OARC, Inc.
.\" Copyright (c) 2017, Comcast Corporation
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. Neither the name of the copyright holder nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
.\" FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
.\" COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\" BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
.\" CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
.\" ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.TH drool.conf 5 "@PACKAGE_VERSION@" "DNS Replay Tool Configuration"
.SH NAME
drool.conf \- Configuration for DNS Replay Tool
.SH DESCRIPTION
With these configuration options for \fIdrool\fR you can control all
aspects of generating/replaying DNS traffic.
Some options are also available as command line options.
.SH CURRENT IMPLEMENTATION LIMITATIONS
These are the current limitations in the implementation and may be changed
or removed in the future:
.TP
- Same configuration for each \fBread\fR and \fBinput\fR
Currently the configuration for \fBfilter\fR, \fBtiming\fR, \fBcontext\fR
and \fBclient_pool\fR affects all \fBread\fR and \fBinput\fR.
In the future this may be split up so that each \fBread\fR and \fBinput\fR
can have different configuration.
.TP
- Only one \fBclient_pool target\fR
Currently there can only be one target for all queries.
In the future this may be change to be able to give multiple targets and
different ways to distribute the queries amongst them.
.TP
- Send from IP/interface
Currently there is no way to specify from where the queries should be sent,
instead it is up to the OS to decide that.
In the future there will be ways to specify this, sending from different
interfaces and/or ranges of IP addresses.
.SH CONFIGURATION
.TP
\fBlog\fR FACILITY [ LEVEL ] ;
Enable logging for \fIfacility\fR, optional log \fIlevel\fR can be given
to enable just that.
Can be given multiple times and will be processed in the given order.
See LOGGING for more information.
.TP
\fBnolog\fR FACILITY [ LEVEL ] ;
Disable logging for \fIfacility\fR, optional log \fIlevel\fR can be
given to disable just that.
Can be given multiple times and will be processed in the given order.
See LOGGING for more information.
.TP
\fBbackend\fR SECTION MODULE ;
Set which backend module to use for each section.
See BACKEND for more information.
.TP
\fBread\fR " FILE " ;
Read packets from PCAP file, can be given multiple times.
Each \fBread\fR counts as a context and will use the given configuration
for starting with \fBcontext\fR.
.TP
\fBinput\fR " INTERFACE " ;
Capture packets from interface, can be given multiple times.
Each \fBinput\fR counts as a context and will use the given configuration
for starting with \fBcontext\fR.
.TP
\fBfilter\fR " FILTER " ;
Set the Berkeley Packet Filter to use, this will be applied on all
\fBread\fR and \fBinput\fR.
.TP
\fBtiming\fR ignore ;
Set the timing mode to ignore all timings and try to send traffic as fast
as possible.
.TP
\fBtiming\fR keep ;
Set the timing mode to try and keep up with interval between the traffic
received, will give a warning if it can't keep up sending it out at the
same rate.
This is the default timing mode if none is specified.
.TP
\fBtiming\fR best_effort ;
This mode is deprecated and is the same as
.IR keep .
Will be removed in future major release.
.TP
\fBtiming\fR add NANOSECONDS ;
Set the timing mode to add the given nanoseconds to the interval between
the traffic received.
.TP
\fBtiming\fR reduce NANOSECONDS ;
Set the timing mode to reduce the interval between the traffic received
with the given nano seconds, will give a warning if it can't keep up
sending it out at the new rate.
.TP
\fBtiming\fR multiply MULTIPLY_AS_FLOAT ;
Set the timing mode to multiply the interval between the traffic received,
this can be thought as percent with 1.00 being 100% of the interval, 2.00
being 200%, 0.10 being 10% and so on.
Will give a warning if it can't keep up sending it out at the new rate.
.TP
\fBcontext\fR client_pools NUMBER ;
Set the number of client pools to use per context (a context is a \fIread\fR
or \fIinput\fR), default is 1.
Each client pool will spin up a thread for sending and receiving and will use
the given configuration starting with \fBclient_pool\fR.
As each \fIread\fR and \fIinput\fR will each use this amount of client pools
it may be good that the total amount does not exceed the number of CPU cores
available.
.TP
\fBclient_pool\fR target " IP_OR_HOSTNAME " " SERVICE_OR_PORT ";
Set the target of the client pools, where to send the traffic.
.TP
\fBclient_pool\fR max_clients NUMBER ;
Set the maximum clients each client pool can have, default 100. Each client
will use a TCP or UDP port depending on the traffic read/captured,
\fBfilter\fR and \fBclient_pool sendas\fR.
The total amount of ports used will be this value * number of \fIread\fR
and \fIinput\fR * \fBcontext client_pools\fR and it is advised to keep this
within the available ports/file descriptors for the running user.
If used together with backend
.I udpcli
then this will set the number of threads to use and run one client per thread.
.TP
\fBclient_pool\fR client_ttl SECONDS_AS_FLOAT ;
Set the time a client lives for, this is used to timeout clients in case
the target does not answer.
Default value is 0.05.
Specified as a float meaning 0.2 would be 200 milliseconds.
.TP
\fBclient_pool\fR skip_reply ;
Enables a mode where replies are ignored and client is considered successful
after just sending.
.TP
\fBclient_pool\fR max_reuse_clients NUMBER ;
Set the maximum clients to save for reuse, this only applies to protocol that
can be reused.
Default value is 20.
.TP
\fBclient_pool\fR sendas < original | udp | tcp > ;
Set how to send the traffic, default is original which sends the traffic with
the same protocol it was received with.
.\" .TP
.\" \fBwrite\fR " FILE " ;
.\" todo
.\" .TP
.\" \fBoutput\fR " INTERFACE " ;
.\" todo
.SH LOGGING
Logging is enabled and disabled in the order specified in the configuration
which allows for enabling of all logging and disabling of specific, for
example:

  log all;
  nolog network debug;

The following logging facilities exists:
.TP
.B core
Log messages about initializing, configuration and start up.
.TP
.B input
Log messages about input related tasks.
.TP
.B processing
Log messages about processing related tasks.
.TP
.B network
Log messages about network related tasks.
.TP
.B all
Log messages for all facilities, this is only used to configure logging.
.LP
The following logging level exists for all facilities:
.TP
.B debug
Log messages about the very inner workings, use with caution since it
generates a lot of messages.
.TP
.B info
Log messages of the informational kind that may not be interesting in normal
operation.
.TP
.B notice
Log messages of the informational kind that may be interesting in normal
operation.
.TP
.B warning
Log message of the warning kind that indicates possible disruption in
operation.
.TP
.B critical
Log messages of the error kind that will most likely result in termination
of operation.
This log level can not be silenced.
.TP
.B fatal
Log messages of the critical kind that indicates termination of operation.
This log level can not be silenced.
.TP
.B all
Log messages for all levels, this is only used to configure logging.
.SH BACKEND
Following backend modules exists, note that some modules does not work with
each other and configuration options may not be available or mean different
things.
.SS SECTION: input
.TP
.B pcapthread
Default input that uses pcap-thread helper library to read from interfaces
and PCAP files.
.TP
.B fpcap
Read input from a PCAP file using standard library function
.B fopen()
and parse the PCAP without libpcap.
Following configuration options does not work:
.B filter
and
.BR timing .
.TP
.B mmpcap
Read input from a PCAP file by mapping the whole file to memory using
.B mmap()
and parse the PCAP without libpcap.
Following configuration options does not work:
.B filter
and
.BR timing .
.TP
.B pcap
Read input from an interface or PCAP file using libpcap.
Following configuration options does not work:
.B filter
and
.BR timing .
.SS SECTION: output
.TP
.B cpool
Send queries to a target by emulating clients (a client pool).
.TP
.B udpcli
Simple and dumb UDP DNS client.
Following configuration options does not work:
.B context
and all
.B client_pool
but
.BR max_clients .
.SH SEE ALSO
drool(1)
.SH AUTHORS
Jerry Lundstr√∂m, DNS-OARC
.LP
Maintained by DNS-OARC
.LP
.RS
.I https://www.dns-oarc.net/
.RE
.LP
.SH BUGS
For issues and feature requests please use:
.LP
.RS
\fI@PACKAGE_URL@\fP
.RE
.LP
For question and help please use:
.LP
.RS
\fI@PACKAGE_BUGREPORT@\fP
.RE
.LP
